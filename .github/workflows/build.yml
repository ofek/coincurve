name: build

on:
  create:
    tags:
    - v*
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  COINCURVE_UPSTREAM_REF: f2d9aeae6d5a7c7fbbba8bbb38b1849b784beef7

jobs:
  test:
    name: Test latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade Python packaging tools
      run: pip install --upgrade pip setuptools wheel

    - name: Show runner information
      run: |
        python --version
        pip --version

    - name: Install dependencies
      run: ./.github/scripts/install-test-deps.sh

    - name: Check style and typing
      run: tox -e lint,typing

    - name: Run tests
      run: tox -e ${PYTHON_VERSION}

    - name: Run benchmarks
      run: tox -e bench

    - name: Upload coverage
      run: codecov -X gcov

  build_unix_wheels:
    name: Build ${{ startsWith(matrix.os, 'macos-') && 'macOS' || 'Linux' }} wheels
    needs:
    - test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.0
      env:
        CIBW_BEFORE_ALL_MACOS: ./.github/scripts/install-macos-build-deps.sh
        CIBW_BEFORE_ALL_LINUX: ./.github/scripts/install-linux-build-deps.sh
        CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x
        CIBW_ARCHS_MACOS: auto universal2
        CIBW_SKIP: pp*
        CIBW_ENVIRONMENT_PASS_LINUX: >
          COINCURVE_UPSTREAM_REF

    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl
        if-no-files-found: error

  build_other:
    name: Build Windows wheels and source distribution
    needs:
    - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install build dependencies
      run: python -m pip install --upgrade cffi

    - name: Build source distribution
      run: python setup.py sdist

    - name: Build Windows wheels
      run: ./.github/scripts/build-windows-wheels.sh

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*
        if-no-files-found: error

  publish:
    name: Publish release
    needs:
    - build_unix_wheels
    - build_other
    runs-on: ubuntu-latest

    # Only publish tags
    if: github.event_name == 'create' && github.event.ref_type == 'tag'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: dist

    - name: Push build artifacts to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
