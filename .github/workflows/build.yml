name: build

on:
  create:
    tags:
    - v*
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  COINCURVE_UPSTREAM_REF: f2d9aeae6d5a7c7fbbba8bbb38b1849b784beef7
  CIBW_ENVIRONMENT_PASS_LINUX: >
    COINCURVE_UPSTREAM_REF
  CIBW_TEST_COMMAND: >
    python -c
    "from coincurve import PrivateKey;
    a=PrivateKey();
    b=PrivateKey();
    assert a.ecdh(b.public_key.format())==b.ecdh(a.public_key.format())
    "
  CIBW_BEFORE_ALL_LINUX: ./.github/scripts/install-linux-build-deps.sh
  CIBW_SKIP: >
    pp*

jobs:
  test:
    name: Test latest
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.10'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Upgrade Python packaging tools
      run: pip install --upgrade pip setuptools wheel

    - name: Show runner information
      run: |
        python --version
        pip --version

    - name: Install dependencies
      run: ./.github/scripts/install-test-deps.sh

    - name: Check style and typing
      run: tox -e lint,typing

    - name: Run tests
      run: tox -e ${PYTHON_VERSION}

    - name: Run benchmarks
      run: tox -e bench

    - name: Upload coverage
      run: codecov -X gcov

  unix-wheels-standard:
    name: Build ${{ startsWith(matrix.os, 'macos-') && 'macOS' || 'Linux' }} wheels
    needs:
    - test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:
    - uses: actions/checkout@v2

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.0
      env:
        CIBW_BEFORE_ALL_MACOS: ./.github/scripts/install-macos-build-deps.sh
        CIBW_ARCHS_MACOS: x86_64 arm64

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: wheelhouse/*.whl
        if-no-files-found: error

  windows-wheels-and-sdist:
    name: Build Windows wheels and source distribution
    needs:
    - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install build dependencies
      run: python -m pip install --upgrade cffi

    - name: Build source distribution
      run: python setup.py sdist

    - name: Build Windows wheels
      run: ./.github/scripts/build-windows-wheels.sh

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist/*
        if-no-files-found: error

  unix-wheels-arm:
    name: Build Linux wheels for ARM
    needs:
    - test
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.0
      env:
        CIBW_ARCHS_LINUX: aarch64

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: wheelhouse/*.whl
        if-no-files-found: error

  publish:
    name: Publish release
    needs:
    - unix-wheels-standard
    - windows-wheels-and-sdist
    - unix-wheels-arm
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && github.event.ref_type == 'tag'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: dist

    - name: Push build artifacts to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
