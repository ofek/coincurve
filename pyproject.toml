[build-system]
requires = ["setuptools>=61", "cffi>=1.3.0", "requests", "setuptools-scm", 'asn1crypto']
build-backend = "setuptools.build_meta"

[project]
name = "coincurve"
authors = [
    { name="Ofek Lev", email="oss@ofek.dev" },
]
description = "Cross-platform Python CFFI bindings for libsecp256k1"
keywords = ["secp256k1", "crypto", "elliptic curves", "bitcoin", "ethereum", "cryptocurrency"]
requires-python = ">=3.8"
dependencies = [
    "asn1crypto",
    "cffi>=1.3.0"
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development :: Libraries',
    'Topic :: Security :: Cryptography',
]
dynamic = ['version', 'readme']

[project.optional-dependencies]
dev = [
    "coverage",
    "pytest",
    "pytest-benchmark"
]

[project.urls]
Homepage = "https://github.com/ofek/coincurve"
Documentation = "https://ofek.dev/coincurve/"
Repository = "https://github.com/ofek/coincurve"
"Bug Tracker" = "https://github.com/ofek/coincurve/issues"

# --- setuptools ---
[tool.setuptools]
packages = ['coincurve']
package-dir = {'' = 'src'}
package-data = {'coincurve' = ['py.typed']}

[tool.setuptools.dynamic]
version = {attr = "coincurve._version.__version__"}
readme = {content-type = "text/markdown", file = "README.md"}

# --- Coverage ---
[tool.coverage.run]
branch = true
source = [
    'src/coincurve',
    'tests',
]
omit = [
    '*/_version.py',
    '*/test_bench.py',
]

[tool.coverage.report]
exclude_lines =[
    'no cov',
    'no qa',

    # Ignore missing debug-only code
    'def __repr__',
    'if self\.debug',

    # Ignore non-runnable code
    'if __name__ == .__main__.:',
]

[tool.coverage.paths]
source = [
   'src/coincurve',
   '.tox/*/lib/python*/site-packages/coincurve',
   '.tox/pypy*/site-packages/coincurve',
]

# --- Pytest ---
[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

# --- Black ---
[tool.black]
target-version = ["py38"]
line-length = 120
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _cffi_build
  | libsecp256k1
  | build
  | dist
)/
  |
(
    setup\.py$
  | _libsecp256k1\.py$
)
'''

# --- Ruff ---
[tool.ruff]
target-version = "py38"
line-length = 120
lint.select = ["A", "B", "C", "E", "F", "I", "M", "N", "Q", "RUF", "S", "T", "U", "W", "YTT"]
lint.ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
]
lint.unfixable = [
  # Don't touch unused imports
  "F401",
]
extend-exclude = [
    "tests/conftest.py",
    "libsecp256k1"
]

[tool.ruff.lint.isort]
known-first-party = ["coincurve"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.per-file-ignores]
"setup.py" = ["B", "C", "I", "N", "U"]
# Tests can use assertions
"tests/*" = ["S101"]
"tests/**/*" = ["S101"]

# --- Mypy ---
[tool.mypy]
disallow_untyped_defs = false
follow_imports = 'normal'
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true
