[build-system]
requires = ["setuptools>=61", "cffi>=1.3.0"]
build-backend = "setuptools.build_meta"

[project]
name = "coincurve"
version = "19.0.0"
authors = [
  { name="Ofek Lev", email="oss@ofek.dev" },
]
description = "Cross-platform Python CFFI bindings for libsecp256k1"
license = { file="LICENSE-MIT" }
keywords = ["secp256k1", "crypto", "elliptic curves", "bitcoin", "ethereum", "cryptocurrency"]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "asn1crypto",
    "cffi>=1.3.0"
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development :: Libraries',
    'Topic :: Security :: Cryptography',
]

[project.urls]
"Homepage" = "https://github.com/ofek/coincurve"
"Bug Tracker" = "https://github.com/ofek/coincurve/issues"
"Documentation" = "https://ofek.dev/coincurve/"
"Issues" = "https://github.com/ofek/coincurve/issues"
"Source" = "https://github.com/ofek/coincurve"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | _cffi_build
  | build
  | dist
)/
  |
(
    setup\.py$
  | _libsecp256k1\.py$
)
'''

[tool.ruff]
target-version = "py37"
line-length = 120
select = ["A", "B", "C", "E", "F", "I", "M", "N", "Q", "RUF", "S", "T", "U", "W", "YTT"]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
extend-exclude = [
  "_cffi_build/compose_cffi_files.py",
]

[tool.ruff.isort]
known-first-party = ["coincurve"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.per-file-ignores]
"setup.py" = ["B", "C", "I", "N", "U"]
# Tests can use assertions
"tests/*" = ["S101"]
"tests/**/*" = ["S101"]
